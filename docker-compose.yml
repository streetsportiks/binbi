services:
  db:
    image: postgres:14.5
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
  rabbit:
    image: rabbitmq:3.13.1-management
    container_name: 'rabbitmq'
    restart: always
    ports:
      - 5672:5672
      - 15672:15672

#  celery:
#    restart: always
#    build:
#      context: .
#    command: sh -c "cd binbi/ && celery -A binbi worker -l info"
#    environment:
#      - POSTGRES_DB=postgres
#      - POSTGRES_USER=postgres
#      - POSTGRES_PASSWORD=postgres
#    depends_on:
#      - rabbit

  web:
    build: .
    command: ["./wait-for-it.sh", "db:5432", "--",
              "uwsgi", "--ini", "/code/config/uwsgi/uwsgi.ini",
              ]
    restart: always
    volumes:
      - .:/code
    environment:
      - DJANGO_SETTINGS_MODULE=binbi.settings
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      - db
      - rabbit

  nginx:
    image: nginx:1.25.5
    restart: always
    volumes:
      - ./config/nginx:/etc/nginx/templates
      - .:/code
    ports:
      - "100:80"

  app:
    image: ${DOCKER_REGISTRY-}app
    container_name: parser
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "7268:7268"
      - "5227:5227"
    networks:
      - api-network
    environment:
      ASPNETCORE_ENVIRONMENT: 'Development'
      ASPNETCORE_URLS: 'http://[::]:5227'
      ParserOptions:TotalItemsCount: '150'
      ParserOptions:SaveToDb: 'true'
      ConnectionStrings:MongoDB:ConnectionString: 'mongodb://mongodb:27017/'
      ConnectionStrings:MongoDB:DbName: 'binbi_parser_articles'
      ConnectionStrings:AiBaseUrl": 'http://31.128.33.228:8080'
    depends_on:
      - mongodb
  
  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
    networks:
      - api-network

networks:
  api-network:
    driver: bridge

volumes:
  mongo-data:
  app: